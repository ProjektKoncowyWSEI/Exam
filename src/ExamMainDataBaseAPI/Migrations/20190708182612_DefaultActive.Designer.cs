// <auto-generated />
using System;
using ExamMainDataBaseAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamMainDataBaseAPI.Migrations
{
    [DbContext(typeof(ExamQuestionsDbContext))]
    [Migration("20190708182612_DefaultActive")]
    partial class DefaultActive
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExamContract.MainDbModels.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Content");

                    b.Property<string>("Login")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<decimal>("Points");

                    b.Property<int>("QuestionId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("ExamContract.MainDbModels.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("DurationMinutes");

                    b.Property<string>("Login")
                        .HasMaxLength(256);

                    b.Property<decimal>("MaxPoints");

                    b.Property<DateTime>("MaxStart");

                    b.Property<DateTime>("MinStart");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("ExamContract.MainDbModels.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("AnswerType");

                    b.Property<string>("Content");

                    b.Property<int?>("ExamId");

                    b.Property<string>("Login")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ExamContract.MainDbModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int?>("ExamId");

                    b.Property<string>("Login")
                        .HasMaxLength(256);

                    b.Property<decimal>("Points");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamContract.MainDbModels.Answer", b =>
                {
                    b.HasOne("ExamContract.MainDbModels.Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExamContract.MainDbModels.Question", b =>
                {
                    b.HasOne("ExamContract.MainDbModels.Exam")
                        .WithMany("Questions")
                        .HasForeignKey("ExamId");
                });

            modelBuilder.Entity("ExamContract.MainDbModels.User", b =>
                {
                    b.HasOne("ExamContract.MainDbModels.Exam")
                        .WithMany("Users")
                        .HasForeignKey("ExamId");
                });
#pragma warning restore 612, 618
        }
    }
}
